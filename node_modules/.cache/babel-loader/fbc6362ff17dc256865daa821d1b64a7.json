{"ast":null,"code":"const initialstate = {\n  employees: [{\n    id: 1,\n    employeeName: \"Employee 1\",\n    employeeDepartment: \".NET Team\"\n  }, {\n    id: 2,\n    employeeName: \"Employee 2\",\n    employeeDepartment: \"Mobile Team\"\n  }, {\n    id: 3,\n    employeeName: \"Employee 3\",\n    employeeDepartment: \"Design Team\"\n  }]\n};\n\nconst reducer = (state = initialstate, action) => {\n  switch (action.type) {\n    case 'GET_EMPLOYEE':\n      return { ...state\n      };\n\n    case 'ADD_EMPLOYEE':\n      return { ...state,\n        employees: state.employees.concat(action.payload)\n      };\n\n    case 'EDIT_EMPLOYEE':\n      return { ...state,\n        employees: state.employees.map((content, i) => content.id === action.payload.id ? { ...content,\n          employeeName: action.payload.employeeName,\n          employeeDepartment: action.payload.employeeDepartment\n        } : content)\n      };\n\n    case 'DELETE_EMPLOYEE':\n      return { ...state,\n        employees: state.employees.filter(item => item.id !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/React/crud-reactredux1/src/redux/reducer.js"],"names":["initialstate","employees","id","employeeName","employeeDepartment","reducer","state","action","type","concat","payload","map","content","i","filter","item"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE,CACP;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,YAAY,EAAE,YAAvB;AAAqCC,IAAAA,kBAAkB,EAAE;AAAzD,GADO,EAEP;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,YAAY,EAAE,YAAvB;AAAqCC,IAAAA,kBAAkB,EAAE;AAAzD,GAFO,EAGP;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,YAAY,EAAE,YAAvB;AAAqCC,IAAAA,kBAAkB,EAAE;AAAzD,GAHO;AADM,CAArB;;AAQA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,cAAL;AACI,aAAO,EACH,GAAGF;AADA,OAAP;;AAGJ,SAAK,cAAL;AACI,aAAO,EACH,GAAGA,KADA;AAEHL,QAAAA,SAAS,EAAEK,KAAK,CAACL,SAAN,CAAgBQ,MAAhB,CAAuBF,MAAM,CAACG,OAA9B;AAFR,OAAP;;AAIJ,SAAK,eAAL;AACI,aAAO,EACH,GAAGJ,KADA;AAEHL,QAAAA,SAAS,EAAEK,KAAK,CAACL,SAAN,CAAgBU,GAAhB,CACP,CAACC,OAAD,EAAUC,CAAV,KAAgBD,OAAO,CAACV,EAAR,KAAeK,MAAM,CAACG,OAAP,CAAeR,EAA9B,GAAmC,EAAC,GAAGU,OAAJ;AAAaT,UAAAA,YAAY,EAAGI,MAAM,CAACG,OAAP,CAAeP,YAA3C;AAA2DC,UAAAA,kBAAkB,EAAGG,MAAM,CAACG,OAAP,CAAeN;AAA/F,SAAnC,GACUQ,OAFnB;AAFR,OAAP;;AAMJ,SAAK,iBAAL;AACI,aAAO,EACH,GAAGN,KADA;AAEHL,QAAAA,SAAS,EAAEK,KAAK,CAACL,SAAN,CAAgBa,MAAhB,CAAuBC,IAAI,IAAIA,IAAI,CAACb,EAAL,KAAYK,MAAM,CAACG,OAAlD;AAFR,OAAP;;AAIJ;AACI,aAAOJ,KAAP;AAvBR;AAyBH,CA1BD;;AA4BA,eAAeD,OAAf","sourcesContent":["const initialstate = {\r\n    employees: [\r\n        { id: 1, employeeName: \"Employee 1\", employeeDepartment: \".NET Team\" },\r\n        { id: 2, employeeName: \"Employee 2\", employeeDepartment: \"Mobile Team\" },\r\n        { id: 3, employeeName: \"Employee 3\", employeeDepartment: \"Design Team\" }\r\n    ]\r\n};\r\n\r\nconst reducer = (state = initialstate, action) => {\r\n    switch (action.type) {\r\n        case 'GET_EMPLOYEE':\r\n            return {\r\n                ...state\r\n            };\r\n        case 'ADD_EMPLOYEE':\r\n            return {\r\n                ...state,\r\n                employees: state.employees.concat(action.payload)\r\n            };\r\n        case 'EDIT_EMPLOYEE':\r\n            return {\r\n                ...state,\r\n                employees: state.employees.map(\r\n                    (content, i) => content.id === action.payload.id ? {...content, employeeName : action.payload.employeeName ,  employeeDepartment : action.payload.employeeDepartment }\r\n                                            : content)\r\n            };\r\n        case 'DELETE_EMPLOYEE':\r\n            return {\r\n                ...state,\r\n                employees: state.employees.filter(item => item.id !== action.payload)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}