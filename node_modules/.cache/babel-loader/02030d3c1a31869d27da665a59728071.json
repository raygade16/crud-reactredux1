{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\crud-reactredux1\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport PropTypes from 'prop-types';\nimport { getEmployee, addEmployee, editEmployee, deleteEmployee } from './redux/action';\nimport { connect } from 'react-redux';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.submitData = () => {\n      if (this.state.employeeName && this.state.employeeDepartment && !this.state.id) {\n        const newEmployee = {\n          id: Math.floor(Math.random() * (999 - 100 + 1) + 100),\n          employeeName: this.state.employeeName,\n          employeeDepartment: this.state.employeeDepartment\n        };\n        this.props.addEmployee(newEmployee);\n      } else if (this.state.employeeName && this.state.employeeDepartment && this.state.id) {\n        const updatedDetails = {\n          id: this.state.id,\n          employeeName: this.state.employeeName,\n          employeeDepartment: this.state.employeeDepartment\n        };\n        this.props.editEmployee(updatedDetails);\n      } else {\n        alert('Enter Employee Details.');\n      }\n\n      this.clearData();\n    };\n\n    this.editDetails = data => {\n      this.setState({\n        id: data.id,\n        employeeName: data.employeeName,\n        employeeDepartment: data.employeeDepartment\n      });\n    };\n\n    this.deleteEmployee = id => {\n      this.clearData();\n\n      if (window.confirm(\"Are you sure?\")) {\n        this.props.deleteEmployee(id);\n      }\n    };\n\n    this.handleNameChange = e => {\n      this.setState({\n        employeeName: e.target.value\n      });\n    };\n\n    this.handleDepartmentChange = e => {\n      this.setState({\n        employeeDepartment: e.target.value\n      });\n    };\n\n    this.clearData = () => {\n      this.setState({\n        id: 0,\n        employeeName: \"\",\n        employeeDepartment: \"\"\n      });\n    };\n\n    this.state = {\n      id: 0,\n      employeeName: \"\",\n      employeeDepartment: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.props.getEmployee();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"App-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, \"CRUD opeartions for Employee Module\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"App-intro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"leftsection\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, \"Employee Name : \", /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.handleNameChange,\n      value: this.state.employeeName,\n      type: \"text\",\n      placeholder: \"Employee Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 29\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 144\n      }\n    }), \"Employee Department :  \", /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.handleDepartmentChange,\n      value: this.state.employeeDepartment,\n      type: \"text\",\n      placeholder: \"Employee Department\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 36\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 168\n      }\n    }), this.state.id ? /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.submitData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 30\n      }\n    }, \"UPDATE\") : /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.submitData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 82\n      }\n    }, \"ADD\"), \" \\xA0\\xA0\", /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.clearData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 142\n      }\n    }, \"CLEAR\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rightsection\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 19\n      }\n    }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 19\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 19\n      }\n    }, \"Depatment Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 19\n      }\n    }, \"Action(s)\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }, this.props.employees && this.props.employees.map((data, index) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: index + 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 26\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }\n      }, index + 1), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }\n      }, data.employeeName), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }\n      }, data.employeeDepartment), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.editDetails(data),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }\n      }, \"EDIT\"), \" \", /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.deleteEmployee(data.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 86\n        }\n      }, \"DELETE\"), \" \"));\n    }))))));\n  }\n\n}\n\nApp.propTypes = {\n  employees: PropTypes.array.isRequired,\n  getEmployee: PropTypes.func.isRequired,\n  addEmployee: PropTypes.func.isRequired,\n  editEmployee: PropTypes.func.isRequired,\n  deleteEmployee: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  employees: state.employees\n});\n\nexport default connect(mapStateToProps, {\n  getEmployee,\n  addEmployee,\n  editEmployee,\n  deleteEmployee\n})(App);","map":{"version":3,"sources":["D:/React/crud-reactredux1/src/App.js"],"names":["React","Component","PropTypes","getEmployee","addEmployee","editEmployee","deleteEmployee","connect","App","constructor","props","submitData","state","employeeName","employeeDepartment","id","newEmployee","Math","floor","random","updatedDetails","alert","clearData","editDetails","data","setState","window","confirm","handleNameChange","e","target","value","handleDepartmentChange","componentDidMount","render","logo","employees","map","index","propTypes","array","isRequired","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport PropTypes from 'prop-types';\nimport { getEmployee, addEmployee, editEmployee, deleteEmployee } from './redux/action';\nimport { connect } from 'react-redux';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: 0,\n      employeeName: \"\",\n      employeeDepartment: \"\"\n    };\n  }\n\n  static propTypes = {\n    employees: PropTypes.array.isRequired,\n    getEmployee: PropTypes.func.isRequired,\n    addEmployee: PropTypes.func.isRequired,\n    editEmployee: PropTypes.func.isRequired,\n    deleteEmployee: PropTypes.func.isRequired\n  };\n\n  componentDidMount() {\n    this.props.getEmployee();\n  }\n\n  submitData = () => {\n    if (this.state.employeeName && this.state.employeeDepartment && !this.state.id) {\n      const newEmployee = {\n        id: Math.floor(Math.random() * (999 - 100 + 1) + 100),\n        employeeName: this.state.employeeName,\n        employeeDepartment: this.state.employeeDepartment,\n      };\n\n      this.props.addEmployee(newEmployee);\n    } else if (this.state.employeeName && this.state.employeeDepartment && this.state.id) {\n      const updatedDetails = {\n        id: this.state.id,\n        employeeName: this.state.employeeName,\n        employeeDepartment: this.state.employeeDepartment,\n      };\n\n      this.props.editEmployee(updatedDetails);\n    } else {\n      alert('Enter Employee Details.');\n    }\n\n    this.clearData();\n  }\n\n  editDetails = (data) => {\n    this.setState({\n      id: data.id,\n      employeeName: data.employeeName,\n      employeeDepartment: data.employeeDepartment\n    })\n  }\n\n  deleteEmployee = (id) => {\n    this.clearData();\n    if (window.confirm(\"Are you sure?\")) {\n      this.props.deleteEmployee(id);\n    }\n  }\n\n  handleNameChange = (e) => {\n    this.setState({\n      employeeName: e.target.value\n    });\n  }\n\n  handleDepartmentChange = (e) => {\n    this.setState({\n      employeeDepartment: e.target.value\n    });\n  }\n\n  clearData = () => {\n    this.setState({\n      id: 0,\n      employeeName: \"\",\n      employeeDepartment: \"\"\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h1 className=\"App-title\">CRUD opeartions for Employee Module</h1>\n        </header>\n        <p className=\"App-intro\">\n          <div className=\"leftsection\">\n            Employee Name : <input onChange={this.handleNameChange} value={this.state.employeeName} type=\"text\" placeholder=\"Employee Name\" /> <br />\n            Employee Department :  <input onChange={this.handleDepartmentChange} value={this.state.employeeDepartment} type=\"text\" placeholder=\"Employee Department\" /><br />\n            {this.state.id ? <button onClick={this.submitData}>UPDATE</button> : <button onClick={this.submitData}>ADD</button>} &nbsp;&nbsp;<button onClick={this.clearData}>CLEAR</button>\n          </div>\n          <div className=\"rightsection\">\n            <table>\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>Name</th>\n                  <th>Depatment Name</th>\n                  <th>Action(s)</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.props.employees && this.props.employees.map((data, index) => {\n                  return <tr key={(index + 1)}>\n                    <td>{(index + 1)}</td>\n                    <td>{data.employeeName}</td>\n                    <td>{data.employeeDepartment}</td>\n                    <td><button onClick={() => this.editDetails(data)}>EDIT</button> <button onClick={() => this.deleteEmployee(data.id)}>DELETE</button> </td>\n                  </tr>\n                })}\n              </tbody>\n            </table>\n          </div>\n        </p>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  employees: state.employees\n});\n\nexport default connect(mapStateToProps, { getEmployee, addEmployee, editEmployee, deleteEmployee })(App);"]},"metadata":{},"sourceType":"module"}